plugins {
	id "maven-publish"
	id "fabric-loom"
	id "org.cadixdev.licenser"
	id "io.github.juuxel.loom-quiltflower"
}

license {
	header = rootProject.file("LICENSE")

	ignoreFailures = true
}

loom {
	accessWidenerPath = file("src/main/resources/hammer.accesswidener")
}


group = projectGroup
version = projectVersion

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

repositories {
	// vini2003
	maven {
		name = "vini2003"
		url = "https://maven.vini2003.dev/releases"
	}

	// Fabric
	maven {
		name = "FabricMC"
		url = "https://maven.fabricmc.net/"
	}

	// EngineHub
	maven {
		name = "EngineHub"
		url = "https://maven.enginehub.org/repo/"
	}
}

dependencies {
	// Minecraft
	minecraft("com.mojang:minecraft:${minecraftVersion}")

	// Yarn
	mappings("net.fabricmc:yarn:${yarnVersion}:v2")

	// Fabric Loader
	modImplementation("net.fabricmc:fabric-loader:${fabricLoaderVersion}")

	// Fabric API
	modImplementation("net.fabricmc.fabric-api:fabric-api:${fabricApiVersion}") { exclude group: 'net.fabricmc', module: 'fabric-loader' }

	// FindBugs
	modImplementation("com.google.code.findbugs:jsr305:${findBugsVersion}")

	// Energy
	modApi "teamreborn:energy:${energyVersion}"

	// LuckPerms
	modApi "net.luckperms:api:${luckPermsVersion}"
	include "net.luckperms:api:${luckPermsVersion}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			groupId = projectGroup
			version = projectVersion

			artifact(remapJar) {
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		maven {
			name = "vini2003"
			url = "https://maven.vini2003.dev/releases"

			credentials {
				username = System.getenv("MVN_USERNAME")
				password = System.getenv("MVN_TOKEN")
			}

			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}
