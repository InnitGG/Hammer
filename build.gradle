plugins {
    // Fabric Loom
    id "fabric-loom" apply false

    // Maven Publish
    id "maven-publish"

    // Licenser
    id "org.cadixdev.licenser"
}

allprojects {
    apply plugin: 'org.cadixdev.licenser'

    license {
        header = rootProject.file("LICENSE")

        ignoreFailures = true
    }
}

subprojects {
    apply plugin: "fabric-loom"
    apply plugin: "maven-publish"

    group = projectGroup
    version = projectVersion

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17

        withSourcesJar()
    }

    loom {
        runs {
            client {
                client()
                setConfigName("Minecraft Client ($projectName)")
                ideConfigGenerated(true)
                runDir("run")
            }

            server {
                server()
                setConfigName("Minecraft Server ($projectName)")
                ideConfigGenerated(true)
                runDir("run")
            }
        }
    }

    repositories {
        // vini2003
        maven {
            name = "vini2003"
            url = "https://maven.vini2003.dev/releases"
        }

        // Fabric
        maven {
            name = "FabricMC"
            url = "https://maven.fabricmc.net/"
        }
    }

    configurations.all {
        exclude(module: "colonel")
    }

    dependencies {
        // Minecraft
        minecraft("com.mojang:minecraft:${minecraftVersion}")

        // Yarn
        mappings("net.fabricmc:yarn:${yarnVersion}:v2")

        // Fabric Loader
        modImplementation("net.fabricmc:fabric-loader:${fabricLoaderVersion}")

        // Fabric API
        modImplementation("net.fabricmc.fabric-api:fabric-api:${fabricApiVersion}")
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = archivesBaseName
                groupId = projectGroup
                version = projectVersion

                artifact(remapJar) {
                    builtBy remapJar
                }

                artifact(sourcesJar) {
                    builtBy remapSourcesJar
                }
            }
        }

        repositories {
            maven {
                name = "vini2003"
                url = "https://maven.vini2003.dev/releases"

                credentials {
                    username = System.getenv("MVN_USERNAME")
                    password = System.getenv("MVN_TOKEN")
                }

                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}